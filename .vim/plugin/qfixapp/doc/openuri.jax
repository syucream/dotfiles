*openuri.jax*	For Vim バージョン 7.2	Last change: 2011 November 14
==============================================================================
       Description: open URI
            Author: fuenor <fuenor@gmail.com>
            Web(Japanese):
            http://sites.google.com/site/fudist/Home
            http://sites.google.com/site/fudist/Home/qfixdev/ver3
==============================================================================
  CONTENTS						*openuri_contents*
  1. Intro                                              |openuri_intro|
  2. インストール                                       |openuri_settings|
  3. コマンド                                           |openuri_command|
  4. URI記述のフォーマット                              |openuri_uri|
    4.1 特殊なパスのテキストリンク                      |openuri_path|
    4.2 基準ディレクトリ                                |openuri_basedir|
  5. オプション                                         |openuri_option|
    5.1 独自ブラウザ起動オプション                      |openuri_alt_option|
    5.2 QFixHowmブラウザ起動オプション                  |openuri_qfixhowm|
    5.3 netrwブラウザ起動オプション                     |openuri_netrw|

==============================================================================
1. Intro						*openuri_intro*

openuri.vimはURIや画像ファイル等のテキストリンクをVimや外部ブラウザで開くため
のプラグインです。
openuri.vimでは直接パスや相対パスはもちろん、空白や日本語を含むパスも開くこと
が可能です。

==============================================================================
2. インストール						*openuri_settings*
openuri.vimをruntimepathの通った場所へコピーしてください。
autoloadでの読み込みにも対応しています。

==============================================================================
3. コマンド						*openuri_command*

コマンドモードからURIを開きたい場合は直接実行可能です。
  :Openuri
  :Openuri http://www.example.com
  :call openuri#open('http://www.example.com')

NOTE: openuri.vimをautoloadで読み込むと、起動直後は :Openuri コマンドがロード
      されていません。
      そのような場合は初期化関数を呼び出すとロードされます。
        :call openuri#init()

適当なバッファを開いてURIを記述してから、カーソルをURI上に移動し Openuri
を実行するとURIを開きます。
(例) カーソルを http://www.example.com 上に移動しコマンドを実行します。
  :Openuri

<CR>にopenuriをキーマップすることも可能です。 >
  nnoremap <silent> <CR> :<C-u>call openuri#cursorline()<CR>

openuri.vimで開くことが可能なURIは以下のシンタックスで強調表示できます。 >
  " URIのシンタックス定義
  syn match txtUrl  '\(http\|https\|file\|ftp\)://[-0-9a-zA-Z;/?:@&=+$,_.!~*'()%#]*'
  syn match txtFile '\(memo\|rel\|howm\)://[-0-9a-zA-Z;/?:@&=+$,_.!~*'()%#}[\]\\]*'
  syn match txtFile '\([A-Za-z]:[/\\]\|\~[/\\]\)[-0-9a-zA-Z;/?:@&=+$,_.!~*'()%{}[\]\\]\+'
  syn match txtFile '\[:\?&\?\zs\(memo\|rel\|howm\|https\|http\|file\|ftp\)://[^:]\+\ze:[^\]]*]'
  syn match txtFile '\[:\?&\?\zs\([A-Za-z]:[/\\]\|\~[/\\]\|\.\.\?[/\\]\|[/\\]\)[^:]\+\ze:[^\]]*]'

  hi link txtUrl  Underlined
  hi link txtFile Underlined

==============================================================================
4. URI記述のフォーマット				*openuri_uri*

openuriで使用可能なスキームは以下のとおりです。
| *スキーム | *基準ディレクトリ |
| http://   |                   |
| https://  |                   |
| ftp://    |                   |
| file://   |                   |
| howm://   | howm_dir          |
| memo://   | openuri_memopath  |
| rel://    | openuri_relpath   |

(記述例)
http://www.example.com
http://www.example.com:80

ファイルパスを直接記述してもURIとして認識されます。
  ~/hoge.txt
  c:\temp\hoge.txt

------------------------------------------------------------------------------
4.1 特殊なパスのテキストリンク				*openuri_path*

パスに空白や日本語を含んでいたり、 / や \ で始まるパスは [ と :] で囲むことで
使用可能です。
  [C:/temp\ho   ge.txt:] [/temp/ふが.txt:]

相対パスやUNCパス(Windowsの\\で表されるネットワークパス)も使用可能です。
相対パスは現バッファと関連付けられているファイルのパスを基準ディレクトリとして
変換されます。
  相対パス
  [./hoge.txt:]
  [../hoge/puyo.txt:]
  UNCパス
  [\\hmsv\share\fuga.txt:]

http:// や画像ファイル等はVimではなくブラウザを起動して開きます。
  [C:\temp/テスト.jpg:]

NOTE: 記述上の意味はありませんが [ と :] ではなく [: と :]で囲んでも構いません。

------------------------------------------------------------------------------
4.2 基準ディレクトリ					*openuri_basedir*

openuri.vim独自の基準ディレクトリを指定してファイルパスを記述できます。
基準ディレクトリを使用するとメモファイルをディレクトリごと移動しても、メモファ
イル中のファイルパスを書き換える必要なくファイルを参照可能になります。

例えば rel:// を使用したファイルパス rel://puyo.txt は openuri_relpath が
c:/temp/rel だとすると c:/temp/rel/puyo.txt として扱われます。

.vimrc >
  " rel:// の基準ディレクトリ
  let openuri_relpath = 'c:/temp/rel'

| *スキーム | *基準ディレクトリ |
| howm://   | howm_dir          |
| memo://   | openuri_memopath  |
| rel://    | openuri_relpath   |

NOTE: openuri_memopathを設定しない場合は memo://の変換にhowm_dir(qfixmemo_dir)
がデフォルトとして使用されます。

NOTE: ユーザー独自スキームも追加可能です。たとえば user:// を追加したい場合は
openuri#AddSchemeで追加してください。
  :call openuri#AddScheme('user', "c:/temp/user")

==============================================================================
5. オプション						*openuri_option*

Vimで開くファイルの拡張子とopenuriで開くブラウザをオプションで設定可能です。

.vimrc >
  " Vimで開く拡張子の正規表現
  let openuri_vimextreg = '\.\(txt\|mkd\|wiki\|rd\|vim\|js\|java\|py\|rb\|h\|c\|cpp\|ini\|conf\)$'

------------------------------------------------------------------------------
5.1 ブラウザ起動オプション				*openuri_alt_option*

テキストリンクをを開くブラウザ指定を独自に行うことも可能です。
>
  " リンクを開くブラウザ指定
  if has('unix')
    let openuri_cmd = "call system('firefox %s &')"
  else
    " let openuri_cmd = '!start "rundll32.exe" url.dll,FileProtocolHandler %s'
    " Internet explorer
    let openuri_cmd = '!start "C:/Program Files/Internet Explorer/iexplore.exe" %s'
    " firefox
    " let openuri_cmd = '!start "C:/Program Files/Mozilla Firefox/firefox.exe" %s'
  endif

特定の拡張子だけユーザ指定のプログラムで開く事も出来ます。
たとえば pdfファイルを外部プログラムを指定して開きたい場合は、openuri_pdf のよ
うに openuri_ の後に拡張子を付加した環境オプションを設定します。

.vimrc >
  " 拡張子別の起動プログラムを指定する
  " pdfの指定
  if has('unix')
    " Linux(Ubuntu)は evince で開く
    let openuri_pdf = "call system('evince %s &')"
  else
    " Windowsは Acrobat Reader で開く
    let openuri_pdf = '!start "C:/Program Files/Adobe/Reader 10.0/Reader/AcroRd32.exe" %s'
  endif
<
NOTE: WindowsのChromeではcmd /c をつけないと起動できないことがあります。
将来的にChromeのバージョンアップで起動できるようになった場合は cmd /cを削除し
てください。 >
  let openuri_cmd = '!start cmd /c "'.$USERPROFILE.'\Local Settings\Application Data\Google\Chrome\Application\chrome.exe" %s'

NOTE: Windowsの関連付けで開くようにするには rundll32を使用します。
>
  let openuri_cmd = '!start "rundll32.exe" url.dll,FileProtocolHandler %s'

------------------------------------------------------------------------------
5.2 QFixHowmブラウザ起動オプション			*openuri_qfixhowm*

開発経緯の関係でQFixHowmのURIオプションがある場合は、QFixHowmオプションが優先
されます。
オプションの対応関係は以下のとおりです。

| openuri_vimextreg  | QFixHowm_OpenVimExtReg |
| openuri_cmd        | QFixHowm_OpenURIcmd    |
| openuri_           | QFixHowm_Opencmd_      |

------------------------------------------------------------------------------
5.3 netrwブラウザ起動オプション			*openuri_netrw*

netrwを利用して openuri_vimextreg 以外のファイルを開きます。
>
  " テキストリンクを開くブラウザ指定
  let openuri_cmd = 'netrw'

|netrw|はVimに標準添付されているブラウジングプラグインで|gx|コマンドの実体です。
ブラウザや拡張子ごとの起動プログラム指定は|gx|を参照してください。

OSやnetrwのバージョンによって挙動が異なることがあります。

  vim:tw=78:ts=8:ft=help:syn=qfixmemo.help:norl

